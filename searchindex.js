Search.setIndex({"docnames": ["_includes/magnetohydrosensor", "_includes/optimization_placement", "_includes/qml_debugging", "index"], "filenames": ["_includes/magnetohydrosensor.rst", "_includes/optimization_placement.rst", "_includes/qml_debugging.rst", "index.rst"], "titles": ["Magnetohydrosensor module", "Optimization placement module", "Debugging module", "QatraH | &lt;\u0642\u0637\u0631\u0629&gt;  (Droplet)"], "terms": {"thi": [0, 1, 2, 3], "code": [0, 2], "wa": 0, "taken": 0, "from": [0, 1, 2, 3], "http": [0, 3], "qml": [0, 3], "baidu": 0, "com": 0, "tutori": 0, "quantum": [0, 1, 2], "simul": 0, "variat": [0, 3], "metrologi": 0, "html": [0, 3], "2": 0, "sensor": [0, 1, 2], "we": [0, 3], "ve": 0, "modifid": 0, "ad": 0, "class": [0, 1, 2], "call": [0, 1], "take": 0, "input": [0, 1, 2], "number": 0, "method": [0, 1], "list": [0, 2], "magnet": 0, "field": 0, "ar": [0, 2, 3], "us": [0, 1, 2], "calibr": 0, "increas": 0, "": [0, 2], "sensitv": 0, "mse": [0, 3], "qnn": [0, 2], "layer": [0, 2], "phi": 0, "float": [0, 1, 2], "tensor": 0, "calcul": [0, 2], "paramet": [0, 1, 2], "cir": 0, "ramsei": 0, "interferomet": 0, "unknown": 0, "estim": 0, "return": [0, 1, 2], "default_field": 0, "0": [0, 1], "sensors_count": 0, "10": 0, "base": [0, 1, 2, 3], "object": [0, 1], "feedback_loop": 0, "sensors_field": 0, "plot": [0, 1], "ramseycircuit": [0, 3], "theta_en": 0, "theta_d": 0, "input_phi": 0, "circuit": [0, 2, 3], "construct": 0, "encod": [0, 3], "shape": 0, "i": [0, 1, 2, 3], "depth_en": 0, "num_qubit": 0, "3": 0, "decod": 0, "circui": 0, "depth_d": 0, "ramseyinterferomet": [0, 3], "forward": [0, 2], "fields_list": 0, "loss": [0, 2, 3], "opt": 0, "none": [0, 1], "optim": [0, 2], "calculate_m": [0, 3], "int": [0, 2, 3], "loss_func": [0, 3], "magnetic_fields_list": 0, "sampling_tim": 0, "partit": 0, "select": 0, "interv": 0, "mean": 0, "normal": 0, "distribut": [0, 3], "varianc": 0, "num_itr": 0, "learning_r": 0, "iter": [0, 2], "learn": [0, 2], "rate": 0, "std_dev": [0, 3], "function": [0, 1, 2], "standard": 0, "deviat": [0, 3], "std_mean": [0, 3], "In": 1, "script": 1, "sensorplac": [1, 3], "defin": [1, 2], "solv": [1, 3], "problem": [1, 2], "which": [1, 2, 3], "network": [1, 2, 3], "The": [1, 2, 3], "also": [1, 3], "includ": 1, "sever": 1, "convert": 1, "data": [1, 2, 3], "datafram": 1, "add": 1, "attribut": 1, "gener": [1, 2], "differ": 1, "factor": 1, "central": 1, "access": 1, "here": [1, 2], "brief": [1, 2], "descript": 1, "each": 1, "convert_oopnet_junctions_to_df": [1, 3], "net": 1, "junction": 1, "an": 1, "oopnet": 1, "convert_oopnet_nodes_to_df": [1, 3], "default_elev": 1, "default_demand": 1, "node": 1, "default": 1, "elev": 1, "demand": 1, "valu": [1, 2], "drop_i": [1, 3], "df": 1, "drop": 1, "column": 1, "_y": 1, "suffix": 1, "add_attribut": [1, 3], "g": 1, "xcoord": 1, "ycoord": 1, "graph": 1, "generate_centrality_factor": [1, 3], "edges_attr": 1, "edg": 1, "diameter_length_factor": [1, 3], "diamet": 1, "length": 1, "create_edge_weight": [1, 3], "A": 1, "b": 1, "creat": [1, 2], "weight": [1, 2], "generate_accessibility_factor": [1, 3], "p": 1, "probabl": 1, "plot_network": [1, 3], "plot_nam": 1, "ha": [1, 2, 3], "run": 1, "algorithm": 1, "qaoa": [1, 3], "vqe": [1, 3], "well": 1, "classic": [1, 2], "sensorplacementresult": [1, 3], "manag": [1, 3], "result": 1, "optimization_plac": 1, "param": [1, 2], "required_param": 1, "nb_sensor": 1, "gen_quadratic_program": 1, "quadraticprogram": 1, "generate_coeffic": 1, "tupl": 1, "dict": 1, "str": 1, "properti": 1, "lin_term": 1, "offset": 1, "quadratic_program": 1, "quadratic_term": 1, "ani": [1, 3], "variou": 1, "_result": 1, "type": [1, 2], "run_class": 1, "label": 1, "option": 1, "run_qaoa": 1, "quantum_inst": 1, "quantuminst": 1, "instanc": 1, "run_vq": 1, "convert_oopnet_pipes_to_df": [1, 3], "pipe": [1, 3], "create_graph": [1, 3], "get_df_from_oopnet_nod": [1, 3], "rename_x": [1, 3], "renam": 1, "_x": 1, "implement": [2, 3], "hybrid": 2, "machin": 2, "model": [2, 3], "binari": [2, 3], "classif": 2, "task": [2, 3], "process": 2, "pressur": 2, "like": [2, 3], "some": 2, "sort": 2, "physic": 2, "system": [2, 3], "part": 2, "neural": [2, 3], "feedforward": 2, "fnn": 2, "two": 2, "hidden": 2, "explan": 2, "structur": 2, "import": 2, "necessari": 2, "librari": 2, "tool": 2, "jax": [2, 3], "haiku": 2, "optax": 2, "pennylan": [2, 3], "etc": 2, "load": 2, "train": [2, 3], "test": [2, 3], "comment": 2, "out": 2, "provid": 2, "entir": 2, "pass": 2, "qforward": 2, "cforward": 2, "initi": 2, "loss_fn": [2, 3], "between": 2, "predict": [2, 3], "output": 2, "ground": 2, "truth": 2, "updat": [2, 3], "gradient": 2, "loop": 2, "through": 2, "epoch": [2, 3], "shuffl": 2, "accuraci": [2, 3], "print": 2, "potenti": 2, "leverag": 2, "advantag": 2, "comput": [2, 3], "certain": 2, "while": [2, 3], "still": 2, "util": 2, "resourc": 2, "other": [2, 3], "all": 2, "handl": 2, "simplifi": 2, "integr": 2, "qml_debug": 2, "x": 2, "y": 2, "after": 2, "fed": [2, 3], "quantum_circuit": [2, 3], "circuit_weight": 2, "build": 2, "expect": 2, "qubit": 2, "measur": 2, "pauliz": 2, "basi": 2, "quantum_lay": [2, 3], "opt_stat": 2, "state": 2, "last": 2, "new": 2, "nyuad": 3, "nyu": 3, "edu": 3, "en": 3, "event": 3, "2023": 3, "april": 3, "hackathon": 3, "solut": 3, "water": 3, "distibut": 3, "debug": 3, "buzz": 3, "word": 3, "wdn": 3, "qubo": 3, "eigensolv": 3, "approxim": 3, "requir": 3, "pip3": 3, "r": 3, "txt": 3, "conda": 3, "user": 3, "pleas": 3, "make": 3, "sure": 3, "pip": 3, "abov": 3, "read": 3, "path": 3, "sourc": 3, "dataset": 3, "sampl": 3, "dewa": 3, "site": 3, "under": 3, "paywal": 3, "compar": 3, "invas": 3, "thei": 3, "toler": 3, "chang": 3, "environ": 3, "around": 3, "being": 3, "more": 3, "accur": 3, "improv": 3, "abil": 3, "leakag": 3, "been": 3, "challeng": 3, "committe": 3, "real": 3, "life": 3, "collect": 3, "place": 3, "can": 3, "localis": 3, "identifi": 3, "done": 3, "both": 3, "exist": 3, "literatur": 3, "suggest": 3, "particular": 3, "given": 3, "point": 3, "time": 3, "attempt": 3, "same": 3, "specif": 3, "It": 3, "framework": 3, "angl": 3, "compos": 3, "parametris": 3, "ry": 3, "rz": 3, "cnot": 3, "gate": 3, "over": 3, "total": 3, "500": 3, "set": 3, "ratio": 3, "4": 3, "1": 3, "optimis": 3, "rectifi": 3, "adam": 3, "cross": 3, "entropi": 3, "At": 3, "end": 3, "obtain": 3, "87": 3, "02": 3, "size": 3, "650": 3, "hacker": 3, "ana": 3, "basant": 3, "moham": 3, "airin": 3, "lakshika": 3, "sanjana": 3, "mentor": 3, "fouad": 3, "el": 3, "amin": 3, "victori": 3, "akash": 3, "kant": 3, "And": 3, "thank": 3, "you": 3, "oragnis": 3, "qbraid": 3, "student": 3, "who": 3, "made": 3, "possibl": 3, "great": 3, "modul": 3, "magnetohydrosensor": 3, "placement": 3, "index": 3, "search": 3, "page": 3}, "objects": {"": [[0, 0, 0, "-", "magnetohydrosensor"], [1, 0, 0, "-", "optimization_placement"], [2, 0, 0, "-", "qml_debugging"]], "magnetohydrosensor": [[0, 1, 1, "", "MSE"], [0, 2, 1, "", "MagnetoHydroSensor"], [0, 1, 1, "", "RamseyCircuit"], [0, 2, 1, "", "RamseyInterferometer"], [0, 1, 1, "", "calculate_m"], [0, 1, 1, "", "loss_func"], [0, 1, 1, "", "optimization"], [0, 1, 1, "", "std_dev"], [0, 1, 1, "", "std_mean"]], "magnetohydrosensor.MagnetoHydroSensor": [[0, 3, 1, "", "feedback_loop"], [0, 3, 1, "", "plot"]], "magnetohydrosensor.RamseyInterferometer": [[0, 3, 1, "", "forward"], [0, 3, 1, "", "opt"]], "optimization_placement": [[1, 2, 1, "", "SensorPlacement"], [1, 2, 1, "", "SensorPlacementResults"], [1, 1, 1, "", "add_attributes"], [1, 1, 1, "", "convert_oopnet_junctions_to_df"], [1, 1, 1, "", "convert_oopnet_nodes_to_df"], [1, 1, 1, "", "convert_oopnet_pipes_to_df"], [1, 1, 1, "", "create_edge_weight"], [1, 1, 1, "", "create_graph"], [1, 1, 1, "", "diameter_length_factor"], [1, 1, 1, "", "drop_y"], [1, 1, 1, "", "generate_accessibility_factor"], [1, 1, 1, "", "generate_centrality_factor"], [1, 1, 1, "", "get_df_from_oopnet_nodes"], [1, 1, 1, "", "plot_network"], [1, 1, 1, "", "rename_x"]], "optimization_placement.SensorPlacement": [[1, 4, 1, "", "REQUIRED_PARAMS"], [1, 3, 1, "", "gen_quadratic_program"], [1, 3, 1, "", "generate_coefficent"], [1, 5, 1, "", "lin_terms"], [1, 5, 1, "", "offset"], [1, 5, 1, "", "quadratic_program"], [1, 5, 1, "", "quadratic_terms"]], "optimization_placement.SensorPlacementResults": [[1, 4, 1, "", "_results"], [1, 5, 1, "", "results"], [1, 3, 1, "", "run_classical"], [1, 3, 1, "", "run_qaoa"], [1, 3, 1, "", "run_vqe"]], "qml_debugging": [[2, 1, 1, "", "loss_fn"], [2, 1, 1, "", "quantum_circuit"], [2, 1, 1, "", "quantum_layer"], [2, 1, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"magnetohydrosensor": 0, "modul": [0, 1, 2], "optim": [1, 3], "placement": 1, "debug": 2, "qatrah": 3, "\u0642\u0637\u0631\u0629": 3, "droplet": 3, "motiv": 3, "quantum": 3, "algorithm": 3, "instal": 3, "instruct": 3, "input": 3, "program": 3, "replac": 3, "classic": 3, "pressur": 3, "sensor": 3, "leak": 3, "detect": 3, "local": 3, "us": 3, "machin": 3, "learn": 3, "acknowledg": 3, "detail": 3, "document": 3, "content": 3, "indic": 3, "tabl": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Magnetohydrosensor module": [[0, "module-magnetohydrosensor"]], "Optimization placement module": [[1, "optimization-placement-module"]], "Debugging module": [[2, "debugging-module"]], "QatraH | <\u0642\u0637\u0631\u0629>  (Droplet)": [[3, "qatrah-droplet"]], "Motivation": [[3, "motivation"]], "Quantum algorithm:": [[3, "quantum-algorithm"]], "Installation Instructions:": [[3, "installation-instructions"]], "Input to the program:": [[3, "input-to-the-program"]], "Replacing Classical Pressure Sensors with Optimized Quantum Sensors": [[3, "replacing-classical-pressure-sensors-with-optimized-quantum-sensors"]], "Leak Detection and Localization": [[3, "leak-detection-and-localization"]], "Using Quantum Machine Learning": [[3, "using-quantum-machine-learning"]], "Acknowledgements": [[3, "acknowledgements"]], "Detailed Documentation": [[3, "detailed-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]]}, "indexentries": {"mse() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.MSE"]], "magnetohydrosensor (class in magnetohydrosensor)": [[0, "magnetohydrosensor.MagnetoHydroSensor"]], "ramseycircuit() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.RamseyCircuit"]], "ramseyinterferometer (class in magnetohydrosensor)": [[0, "magnetohydrosensor.RamseyInterferometer"]], "calculate_m() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.calculate_m"]], "feedback_loop() (magnetohydrosensor.magnetohydrosensor method)": [[0, "magnetohydrosensor.MagnetoHydroSensor.feedback_loop"]], "forward() (magnetohydrosensor.ramseyinterferometer method)": [[0, "magnetohydrosensor.RamseyInterferometer.forward"]], "loss_func() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.loss_func"]], "magnetohydrosensor": [[0, "module-magnetohydrosensor"]], "module": [[0, "module-magnetohydrosensor"], [1, "module-optimization_placement"], [2, "module-qml_debugging"]], "opt() (magnetohydrosensor.ramseyinterferometer method)": [[0, "magnetohydrosensor.RamseyInterferometer.opt"]], "optimization() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.optimization"]], "plot() (magnetohydrosensor.magnetohydrosensor method)": [[0, "magnetohydrosensor.MagnetoHydroSensor.plot"]], "std_dev() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.std_dev"]], "std_mean() (in module magnetohydrosensor)": [[0, "magnetohydrosensor.std_mean"]], "required_params (optimization_placement.sensorplacement attribute)": [[1, "optimization_placement.SensorPlacement.REQUIRED_PARAMS"]], "sensorplacement (class in optimization_placement)": [[1, "optimization_placement.SensorPlacement"]], "sensorplacementresults (class in optimization_placement)": [[1, "optimization_placement.SensorPlacementResults"]], "_results (optimization_placement.sensorplacementresults attribute)": [[1, "optimization_placement.SensorPlacementResults._results"]], "add_attributes() (in module optimization_placement)": [[1, "optimization_placement.add_attributes"]], "convert_oopnet_junctions_to_df() (in module optimization_placement)": [[1, "optimization_placement.convert_oopnet_junctions_to_df"]], "convert_oopnet_nodes_to_df() (in module optimization_placement)": [[1, "optimization_placement.convert_oopnet_nodes_to_df"]], "convert_oopnet_pipes_to_df() (in module optimization_placement)": [[1, "optimization_placement.convert_oopnet_pipes_to_df"]], "create_edge_weight() (in module optimization_placement)": [[1, "optimization_placement.create_edge_weight"]], "create_graph() (in module optimization_placement)": [[1, "optimization_placement.create_graph"]], "diameter_length_factor() (in module optimization_placement)": [[1, "optimization_placement.diameter_length_factor"]], "drop_y() (in module optimization_placement)": [[1, "optimization_placement.drop_y"]], "gen_quadratic_program() (optimization_placement.sensorplacement method)": [[1, "optimization_placement.SensorPlacement.gen_quadratic_program"]], "generate_accessibility_factor() (in module optimization_placement)": [[1, "optimization_placement.generate_accessibility_factor"]], "generate_centrality_factor() (in module optimization_placement)": [[1, "optimization_placement.generate_centrality_factor"]], "generate_coefficent() (optimization_placement.sensorplacement method)": [[1, "optimization_placement.SensorPlacement.generate_coefficent"]], "get_df_from_oopnet_nodes() (in module optimization_placement)": [[1, "optimization_placement.get_df_from_oopnet_nodes"]], "lin_terms (optimization_placement.sensorplacement property)": [[1, "optimization_placement.SensorPlacement.lin_terms"]], "offset (optimization_placement.sensorplacement property)": [[1, "optimization_placement.SensorPlacement.offset"]], "optimization_placement": [[1, "module-optimization_placement"]], "plot_network() (in module optimization_placement)": [[1, "optimization_placement.plot_network"]], "quadratic_program (optimization_placement.sensorplacement property)": [[1, "optimization_placement.SensorPlacement.quadratic_program"]], "quadratic_terms (optimization_placement.sensorplacement property)": [[1, "optimization_placement.SensorPlacement.quadratic_terms"]], "rename_x() (in module optimization_placement)": [[1, "optimization_placement.rename_x"]], "results (optimization_placement.sensorplacementresults property)": [[1, "optimization_placement.SensorPlacementResults.results"]], "run_classical() (optimization_placement.sensorplacementresults method)": [[1, "optimization_placement.SensorPlacementResults.run_classical"]], "run_qaoa() (optimization_placement.sensorplacementresults method)": [[1, "optimization_placement.SensorPlacementResults.run_qaoa"]], "run_vqe() (optimization_placement.sensorplacementresults method)": [[1, "optimization_placement.SensorPlacementResults.run_vqe"]], "loss_fn() (in module qml_debugging)": [[2, "qml_debugging.loss_fn"]], "qml_debugging": [[2, "module-qml_debugging"]], "quantum_circuit() (in module qml_debugging)": [[2, "qml_debugging.quantum_circuit"]], "quantum_layer() (in module qml_debugging)": [[2, "qml_debugging.quantum_layer"]], "update() (in module qml_debugging)": [[2, "qml_debugging.update"]]}})